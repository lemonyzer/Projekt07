MPASM  5.03          LOCHRASTER_JOYSTICKS.ASM   4-20-2007  9:03:40         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ; ***********************************************************
                      00002 ; * lochraster_joysticks.asm - Playstation Controller an PIC16F84A *
                      00003 ; ***********************************************************
                      00004 ;
                      00005 ;       Aryan Layes     HBFI05a         04/2007
                      00006 ;
                      00007 ;       Der PIC soll mit einem PS-Controller kommunizieren
                      00008 ;       und erkennen wo die Joysticks stehen.
                      00009 ;
                      00010 ;       Anzeige -> PORTB
                      00011 ;
                      00012 ; #############################################################################
                      00013 ;
                      00014 ;       D: Digitaler Controller (keine Joysticks)
                      00015 ;       A: Analoger Controller (2 Joysticks)
                      00016 ;
                      00017 ;RxByte Type    Taste   Hex     Binär
                      00018 ;-------------------------------------------    
                      00019 ;1      D/A     Left    0xFE    11111110
                      00020 ;1      D/A     Down    0xFD    11111101
                      00021 ;1      D/A     Right   0xFB    11111011
                      00022 ;1      D/A     Up      0xF7    11110111
                      00023 ;1      D/A     Start   0xEF    11101111
                      00024 ;1      A       Joy-R   0xDF    11011111        ---- Nur Analoger Controller
                      00025 ;1      A       Joy-L   0xBF    10111111        ---- Nur Analoger Controller
                      00026 ;1      D/A     Select  0x7F    01111111
                      00027 ;-------------------------------------------
                      00028 ;2      D/A     []      0xFE    11111110
                      00029 ;2      D/A     X       0xFD    11111101
                      00030 ;2      D/A     O       0xFB    11111011
                      00031 ;2      D/A     /_\     0xF7    11110111
                      00032 ;2      D/A     R1      0xEF    11101111        
                      00033 ;2      D/A     L1      0xDF    11011111
                      00034 ;2      D/A     R2      0xBF    10111111
                      00035 ;2      D/A     L2      0x7F    01111111
                      00036 ;-------------------------------------------
                      00037 ;  Mehrere Buttons werden UND Verknüpft...
                      00038 ;-------------------------------------------
                      00039 ;       A       Joy-R-X 
                      00040 ;       A       Joy-R-X 
                      00041 ;       A       Joy-R-X 
                      00042 ;       A       Joy-R-X 
                      00043 ;       A       Joy-R-X 
                      00044 ;       A       Joy-R-X 
                      00045 ;       A       Joy-R-X 
                      00046 ;       A       Joy-R-X 
                      00047 ;       -----------------------------------
                      00048 ;       A       Joy-R-Y 
                      00049 ;       A       Joy-R-Y 
                      00050 ;       A       Joy-R-Y
                      00051 ;       A       Joy-R-Y 
                      00052 ;       A       Joy-R-Y 
                      00053 ;       A       Joy-R-Y 
MPASM  5.03          LOCHRASTER_JOYSTICKS.ASM   4-20-2007  9:03:40         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 ;       A       Joy-R-Y 
                      00055 ;       A       Joy-R-Y 
                      00056 ;       -----------------------------------
                      00057 ;       A       Joy-L-X 
                      00058 ;       A       Joy-L-X 
                      00059 ;       A       Joy-L-X 
                      00060 ;       A       Joy-L-X 
                      00061 ;       A       Joy-L-X 
                      00062 ;       A       Joy-L-X 
                      00063 ;       A       Joy-L-X 
                      00064 ;       A       Joy-L-X 
                      00065 ;       -----------------------------------
                      00066 ;       A       Joy-L-Y 
                      00067 ;       A       Joy-L-Y 
                      00068 ;       A       Joy-L-Y 
                      00069 ;       A       Joy-L-Y 
                      00070 ;       A       Joy-L-Y 
                      00071 ;       A       Joy-L-Y 
                      00072 ;       A       Joy-L-Y 
                      00073 ;       A       Joy-L-Y 
                      00074 ;       -----------------------------------
                      00075 ;
                      00076 ;***************************************************************************
                      00077 ;* Bestimmung des Prozessortyps für den Assembler und das Programmiergerät *
                      00078 ;***************************************************************************
                      00079 
                      00080                 LIST p=16F84A
                      00081 
                      00082 
                      00083 ;*******************************************************************
                      00084 ;* Includedatei für den 16F84A einbinden (vordef. Reg. und Konst.) *
                      00085 ;*******************************************************************
                      00086 
                      00087                 #include <p16f84A.INC>
                      00001         LIST
                      00002 ; P16F84A.INC  Standard Header File, Version 2.00    Microchip Technology, Inc.
                      00134         LIST
                      00088 
                      00089 ; Diese Datei enthält Vordefinitionen für wichtige Register und Konstanten.
                      00090 ; (Z.B. gibt es die Konstante PORTB mit der sich ohne Angabe der
                      00091 ; absoluten Adresse H'0006' der Port B des Prozessors ansprechen lässt)
                      00092 
                      00093 
                      00094 ;*********************************************************
                      00095 ;* Konfigurationseinstellungen für IC-Prog vordefinieren *
                      00096 ;*********************************************************
                      00097 
2007   3FF2           00098                 __CONFIG _PWRTE_ON & _CP_OFF & _HS_OSC & _WDT_OFF
                      00099 
                      00100 ; Hier werden verschiedene Prozessoreigenschaften festgelegt:
                      00101 ; _PWRTE_ON schaltet den Power Up Timer ein, d.h. der Prozessor wartet nach
                      00102 ;           dem Einschalten ca. 70ms mit dem Programmstart, um sicher zu sein,
                      00103 ;           dass alle angeschlossene Peripherie bereit ist.
MPASM  5.03          LOCHRASTER_JOYSTICKS.ASM   4-20-2007  9:03:40         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00104 ; _CP_OFF schaltet die Code-Protection des Prozesors aus. Damit ist das im Prozessor
                      00105 ;        befindliche Programm jederzeit auslesbar und überschreibbar.
                      00106 ; _HS_OSC spezifiziert einen Quarzoszillator (Highspeed) als Zeitbasis für den Prozessor.
                      00107 ; _WDT_OFF schaltet den Watchdog-Timer des Prozesors aus.
                      00108 
                      00109 
                      00110 ;***********************************
                      00111 ;* Register / Variablen  festlegen *
                      00112 ;***********************************
                      00113 ; hier werden Adressen von Registern / Variablen festgelegt. Diese werden beginnend
                      00114 ; mit der Adresse H'20' aufsteigend vergeben.
                      00115 
                      00116 
                      00117         CBLOCK  H'20'
                      00118         
                      00119 ;Register des PS2 Controller
                      00120                 
  00000020            00121                 sPSC            ;Übertragungsregiser (dynamische Tabelle)
  00000021            00122                 sIDLE           ;IDLE-Register (= 0)
                      00123 
  00000022            00124                 sSTART          ;START-Befehl     (00000001)
  00000023            00125                 gSTART          ;um später die PS2 Kommunikation per
                      00126                                 ;dynamische Tabelle ab zu arbeiten
                      00127 
  00000024            00128                 sTYPE           ;GET TYPE-Befehl  (01000010)
  00000025            00129                 gTYPE           ;Empfangene Daten nach dem GET TYPE Befehl
                      00130 
  00000026            00131                 gSTATUS         ;Status des Controllers (0x5A wenn bereit)
  00000027            00132                 rSTATUS         ;Register um gSTATUS mit 0x5A zu vergleichen
                      00133 
  00000028            00134                 gLEFT           ;Status der Buttons: 
                      00135                                 ;<- | \/ | -> | /\ | Start | JL | JR | Select
                      00136                 
  00000029            00137                 gRIGHT          ;Status der Buttons:
                      00138                                 ;[] | X | O | /_\ | R1 | L1 | R2 | L2
                      00139                                 
  0000002A            00140                 gRJoyX          ;X Position des rechten Joysticks
  0000002B            00141                 gRJoyY          ;Y Position des rechten Joysticks
                      00142                 
  0000002C            00143                 gLJoyX          ;X Position des linken Joysticks
  0000002D            00144                 gLJoyY          ;X Position des linken Joysticks
                      00145 ;14 Register
                      00146 
                      00147 ;Übertragung    
  0000002E            00148                 zaehler_tab
  0000002F            00149                 zaehler_bit
                      00150                 
                      00151 ;2 Register
                      00152         
                      00153 ;Warteschlangen
                      00154         
                      00155                 ;wait_20us      ;Wartezeit nach dem a_ATT auf 0 geht
  00000030            00156                 wait_50us       ;Wartezeit nach dem a_ATT auf 0 geht            ;NEW
MPASM  5.03          LOCHRASTER_JOYSTICKS.ASM   4-20-2007  9:03:40         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00157                 
                      00158                 ;wait_5us       ;Wartezeit zwischen CLOCK LOW und HIGH
  00000031            00159                 wait_25us       ;Wartezeit zwischen CLOCK LOW und HIGH          ;NEW
                      00160 ;2 Register
                      00161 
                      00162 
                      00163 ;Register um zu Überprüfen ob Controller bereit
  00000032            00164                 zaehler
                      00165                 
                      00166 ;Register für die debugging Funktionen.....
                      00167                 
  00000033            00168                 wait_05s
  00000034            00169                 wait_05s_1
  00000035            00170                 wait_05s_2
                      00171 
                      00172 ;3 Register             
                      00173 
                      00174 
                      00175 ;23 Register insgesammt -> Bank 0 reicht dafuer aus     
                      00176         ENDC
                      00177 
                      00178 
                      00179 ;***************************************************************
                      00180 ;               * Konstanten festlegen * 
                      00181 ;***************************************************************
                      00182 
                      00183 ;*****************************************
                      00184 ;       * Konstanten des MAX-7219 * 
                      00185 ;*****************************************
                      00186 
                      00187 ; ***********************************************************************
                      00188 ; * Definition von einzelnen Bits in einem Register / in einer Variable *
                      00189 ; ***********************************************************************
                      00190 
                      00191 ;#####################     Ports zum Controller    ################### 
                      00192 ;##################### ___________________________ ###################
                      00193 #DEFINE e_DATA          PORTA, 0                ; Data          Eingang
                      00194 #DEFINE a_COMMAND       PORTA, 1                ; Command       Ausgang
                      00195 #DEFINE a_CLOCK         PORTA, 2                ; Takt          Ausgang
                      00196 #DEFINE a_ATT           PORTA, 3                ; ATT           Ausgang
                      00197 ;#DEFINE        a_ACK           PORTA, 4                ; ACK   Eingang NICHT BENUTZT
                      00198 
                      00199 ;######################    Ports zur Anzeige     ##################### 
                      00200 ;###################### ________________________ #####################
                      00201 #DEFINE LED_l_down      PORTB, 0                ; DEBBUGING     Ausgang
                      00202 #DEFINE LED_l_left      PORTB, 1                ;               Ausgang
                      00203 #DEFINE LED_l_right     PORTB, 2                ;               Ausgang
                      00204 #DEFINE LED_l_up                PORTB, 3                ;               Ausgang
                      00205 ;###############################
                      00206 #DEFINE LED_r_down      PORTB, 4                ;               Ausgang
                      00207 #DEFINE LED_r_left      PORTB, 5                ;               Ausgang
                      00208 #DEFINE LED_r_up                PORTB, 6                ;               Ausgang
                      00209 #DEFINE LED_r_right     PORTB, 7                ;               Ausgang
MPASM  5.03          LOCHRASTER_JOYSTICKS.ASM   4-20-2007  9:03:40         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00210 ;###############################
                      00211 ;#DEFINE        a_MAX_DATA      PORTB, 0                ; MAX-7219-DATA Ausgang
                      00212 ;#DEFINE        a_MAX_LOAD      PORTB, 1                ; MAX-7219-LOAD Ausgang
                      00213 ;#DEFINE        a_MAX_CLOCK     PORTB, 2                ; MAX-7219-CLOCK        Ausgang
                      00214 ;#####################################################################
                      00215 #DEFINE bank1           STATUS, RP0
                      00216 ;#####################################################################
                      00217 
                      00218 ;*****************
                      00219 ;* Programmstart *
                      00220 ;*****************
                      00221 
0000                  00222         ORG     H'00'   ; Das Programm wird ab Speicherstelle 0 in den
                      00223                         ; Speicher geschrieben
0000   2801           00224         GOTO    init    ; Springe zur Grundinitialisierung der Ports A und B
                      00225 
                      00226 
                      00227 ;*******************
                      00228 ;* Initialisierung *
                      00229 ;*******************
                      00230 
0001   1683           00231 init    BSF     bank1   ; wechsle zu Registerbank 1 (spezielle Register)
                      00232 
0002   3001           00233         MOVLW   B'00000001'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0003   0085           00234         MOVWF   TRISA   ; RA0 Eingang (RA1 bis RA7 sind Ausgänge)
0004   3000           00235         MOVLW   B'00000000'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0005   0086           00236         MOVWF   TRISB   ; RB0 bis RB7 sind Ausgänge
                      00237         
                      00238 ; Die Register TRISA und TRISB legen fest, welche Bits in den jeweiligen Ports
                      00239 ; Ein- bzw. Ausgänge sind. Eine '1' an der entsprechenden Stelle setzt das Bit
                      00240 ; des Ports als Eingang eine '0' setzt das Bit als Ausgang.
                      00241         
0006   1283           00242         BCF     bank1   ; wechsle zu Registerbank 0 
                      00243                         ; (normaler Speicherbereich)
                      00244                         
0007   0185           00245         CLRF    PORTA   ; Port A löschen
0008   0186           00246         CLRF    PORTB   ; Port B löschen
                      00247         
                      00248 
                      00249 ;PS2 - Übertragungsregister
                      00250 ;
0009   01A1           00251         CLRF    sIDLE
                      00252         
000A   3001           00253         MOVLW   B'00000001'     
000B   00A2           00254         MOVWF   sSTART          ;START-Befehl     (00000001) = H'01'
                      00255         
000C   3042           00256         MOVLW   B'01000010'     
000D   00A4           00257         MOVWF   sTYPE           ;GET-TYPE-Befehl  (01000010) = H'42'
                      00258                 
                      00259 ;PS2 - Vergleichsregister
                      00260 ;
MPASM  5.03          LOCHRASTER_JOYSTICKS.ASM   4-20-2007  9:03:40         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000E   305A           00261         MOVLW   B'01011010'     ; = 0x5A = Status des Controller wenn bereit
000F   00A7           00262         MOVWF   rSTATUS         ;Register wird zum Vergleichen benutzt
                      00263                                 ;wenn Controller nicht bereit ist soll von
                      00264                                 ;er zurück zu main springen und die
                      00265                                 ;Anzeige löschen
                      00266 
                      00267 
                      00268 ;*****************
                      00269 ;* Hauptprogramm *
                      00270 ;*****************
                      00271 
0010                  00272 main
                      00273         
0010   1585           00274         BSF     a_ATT           ; ATT auf HIGH, Controller wird abgewählt
                      00275                                 ; (ignoriert alle Daten)
0011   20BA           00276         CALL    UP_wait_25us
0012   1505           00277         BSF     a_CLOCK         ; Clock HIGH
0013   1485           00278         BSF     a_COMMAND       ; Command HIGH
                      00279         
0014   1185           00280         BCF     a_ATT           ; ATT auf LOW das der Controller
                      00281                                 ; die Daten annimmt
                      00282                                         
0015   20B5           00283         CALL    UP_wait_50us    ; Warteschlange bis Controller bereit ist
                      00284         
                      00285 ;#########              
                      00286 ;       BSF     a1;;;;;;;;;     ;-----DEBUGGING
0016   2023           00287         CALL    UP_PSC_send_tabelle
0017   09A8           00288         COMF    gLEFT,F         ;Speicherzellen werden invertiert ( 1 zu 0 
0018   09A9           00289         COMF    gRIGHT,F                ;und 0 zu 1). Weil wenn eine Taste gedrückt
                      00290                                 ;ist dann liegt ein 0 Signal am PIC an
                      00291         
0019   0827           00292         MOVF    rSTATUS,W       ;Controller Status auf Zustand "bereit"         
Message[305]: Using default destination of 1 (file).
001A   02A6           00293         SUBWF   gSTATUS         ;prüfen...
001B   1D03           00294         BTFSS   STATUS,Z                ;Wenn breit, Zerobit = 1
001C   2821           00295         GOTO    nicht_bereit    ;<- Controller nicht bereit...
                      00296                                 ;<- Controller bereit...
                      00297                 
                      00298 ;#########
                      00299          ;BCF   d2              ;------DEBUGGING
001D   0186           00300          CLRF   PORTB           ; Anzeige löschen
001E   205B           00301         CALL    UP_Display_r    ;rechte Display LED auswählen
001F   2088           00302         CALL    UP_Display_l    ;linke Display LED auswählen
                      00303         ;CALL   UP_wait_05s 
                      00304         ;BSF    d2              ;------DEBUGGING
                      00305 ;#########       
                      00306 
                      00307 
                      00308 
Warning[203]: Found opcode in column 1. (GOTO)
0020   2810           00309 GOTO    main                    ;Springe wieder an den Anfang zurück   
                      00310 
0021                  00311 nicht_bereit
MPASM  5.03          LOCHRASTER_JOYSTICKS.ASM   4-20-2007  9:03:40         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0021   0186           00312         CLRF    PORTB
0022   2810           00313         GOTO    main
                      00314 
                      00315         
                      00316         
                      00317 
                      00318 ;******************
                      00319 ;* Unterprogramme *
                      00320 ;******************
                      00321 ;###############################################################################
                      00322 ;###############################################################################
0023                  00323 UP_PSC_send_tabelle
                      00324         
0023   3000           00325         MOVLW   D'0'
0024   00AE           00326         MOVWF   zaehler_tab
                      00327         
0025   3008           00328 PSC_st1 MOVLW   D'8'
0026   00AF           00329         MOVWF   zaehler_bit
                      00330         
0027   1383           00331         BCF      STATUS, IRP    ; Bank 0 oder 1 (alle Register aus der
                      00332                                         ; Tabelle sind in Bank 0)
                      00333         
0028   082E           00334         MOVF    zaehler_tab,W   ;wird mit dem PCL addiert
                      00335         
0029   20CE           00336         CALL    tab_PSC         ;Öffnet die "dynamische Tabelle"
                      00337                                 ;Im Workregister steht jetzt die Adresse
                      00338                                 ;des Registers dessen Inhalt
                      00339                                 ;Übertragen werden soll
                      00340                                 
002A   0084           00341         MOVWF   FSR             ;der Zeiger zeigt jetzt auf das Register
                      00342                                 ;dessen Inhalt Übertragen werden soll
                      00343                                 
002B   0800           00344         MOVF    INDF,W          ;mit dem virtuellen Register INDF kann der
                      00345                                 ;Inhalt des Registers ausgegeben werden,
                      00346                                 ;auf das der Zeiger FSR zeigt
                      00347 
002C   00A0           00348         MOVWF   sPSC            ;Inhalt wird in sende Register kopiert,
                      00349                                 ;da ein weiteres Register aus der Tabelle
                      00350                                 ;benötigt wird um die empfangenen Bits zu
                      00351                                 ;speichern
                      00352         
Message[305]: Using default destination of 1 (file).
002D   0AAE           00353         INCF    zaehler_tab     ;nächste Tabellenreihe
                      00354         
002E   082E           00355         MOVF    zaehler_tab,W   ;wird mit dem PCL addiert
002F   20CE           00356         CALL    tab_PSC         ;Öffnet die "dynamische Tabelle"
                      00357                                 ;Im Workregister steht jetzt die Adresse
                      00358                                 ;des Registers in das geschrieben wird
                      00359                                     
0030   0084           00360         MOVWF   FSR             ;der Zeiger zeigt jetzt auf das Register
                      00361                                 ;in das die empfangenen Bits gespeichert
                      00362                                 ;werden
                      00363                                 ;-
MPASM  5.03          LOCHRASTER_JOYSTICKS.ASM   4-20-2007  9:03:40         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00364                                 ;mit dem virtuellen Register INDF kann der
                      00365                                 ;Inhalt des Registers geändert werden,
                      00366                                 ;auf das der Zeiger FSR zeigt                           
                      00367                                         
Message[305]: Using default destination of 1 (file).
0031   0CA0           00368 PSC_1   RRF     sPSC            ;verschiebe sende Register nach rechts...
0032   1C03           00369         BTFSS   STATUS,C                ;prüfe Wertigkeit des rausgeworfenen Bits
0033   283F           00370         GOTO    PSC_sende_0     ;(STATUS,C=0)-> Übertrage 0 an Controller...
0034   284D           00371         GOTO    PSC_sende_1     ;(STATUS,C=1)-> ansonsten Übertrage '1' 
                      00372 
Message[305]: Using default destination of 1 (file).
0035   03AF           00373 PSC_2   DECF    zaehler_bit
0036   08AF           00374         MOVF    zaehler_bit,F   ; Zähler ...
0037   1D03           00375         BTFSS   STATUS,Z                ; ... auf 0 prüfen,
0038   2831           00376         GOTO    PSC_1           ; <-- Zähler != 0 --> nächstes Bit übertrag.
                      00377                                 ; <-- Zähler == 0
                      00378                                  
                      00379 
Message[305]: Using default destination of 1 (file).
0039   0AAE           00380         INCF    zaehler_tab
003A   3012           00381         MOVLW   D'18'           ;PS2-Analog-Mode Controller
003B   022E           00382         SUBWF   zaehler_tab,W
003C   1D03           00383         BTFSS   STATUS,Z                
003D   2825           00384         GOTO    PSC_st1         ;zaehler_tab < 18
003E   0008           00385         RETURN                  ;zaehler_tab = 18
                      00386 ;###########################################################    
003F                  00387 PSC_sende_0
003F   1085           00388         BCF     a_COMMAND       ;auf 0 setzten
0040   1105           00389         BCF     a_CLOCK         ;negative Flanke (Controller ließt COMMAND)
0041   20BA           00390         CALL    UP_wait_25us    ;aber erst nach 25µs !!!
0042   1805           00391         BTFSC   e_DATA          ;e_DATA prüfen
0043   2849           00392         GOTO    INDF_0_write_1  ;empfangenes Bit in Carry-Flag setzen
0044   284B           00393         GOTO    INDF_0_write_0  ;empfangenes Bit in Carry-Flag setzen
0045                  00394 PSC_sende_0_next        
Message[305]: Using default destination of 1 (file).
0045   0C80           00395         RRF     INDF            ;empfangenes Bit in Register hinzufügen
0046   1505           00396         BSF     a_CLOCK
0047   20BA           00397         CALL    UP_wait_25us
0048   2835           00398         GOTO    PSC_2
                      00399 ;###################################### 
0049                  00400 INDF_0_write_1
0049   1403           00401         BSF     STATUS,C
004A   2845           00402         GOTO    PSC_sende_0_next
                      00403 
004B                  00404 INDF_0_write_0                  ;zur Übersicht, hier geschrieben!!!
004B   1003           00405         BCF     STATUS,C
004C   2845           00406         GOTO    PSC_sende_0_next        
                      00407 ;###########################################################
004D                  00408 PSC_sende_1
004D   1485           00409         BSF     a_COMMAND       ;auf 1 setzten
004E   1105           00410         BCF     a_CLOCK         ;negative Flanke (Controller ließt COMMAND)
004F   20BA           00411         CALL    UP_wait_25us    ;aber erst nach 4µs !!!
0050   1805           00412         BTFSC   e_DATA          ;e_DATA prüfen
MPASM  5.03          LOCHRASTER_JOYSTICKS.ASM   4-20-2007  9:03:40         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0051   2857           00413         GOTO    INDF_1_write_1  ;empfangenes Bit in Carry-Flag setzen
0052   2859           00414         GOTO    INDF_1_write_0  ;empfangenes Bit in Carry-Flag setzen
0053                  00415 PSC_sende_1_next        
Message[305]: Using default destination of 1 (file).
0053   0CA5           00416         RRF     gTYPE           ;empfangenes Bit in Register hinzufügen
0054   1505           00417         BSF     a_CLOCK
0055   20BA           00418         CALL    UP_wait_25us
0056   2835           00419         GOTO    PSC_2
                      00420 ;######################################
0057                  00421 INDF_1_write_1
0057   1403           00422         BSF     STATUS,C
0058   2853           00423         GOTO    PSC_sende_1_next
                      00424 
0059                  00425 INDF_1_write_0                  ;zur Übersicht, hier geschrieben!!!
0059   1003           00426         BCF     STATUS,C
005A   2853           00427         GOTO    PSC_sende_1_next
                      00428 ;###############################################################################
005B                  00429 UP_Display_r                    ;Positionsberechnung Joystick rechts 
005B   3055           00430         MOVLW   D'85'
005C   022A           00431         SUBWF   gRJoyX,W
005D   1803           00432         BTFSC   STATUS,C
005E   286B           00433         GOTO    x_groesser_85
                      00434 
005F                  00435 x_kleiner_gleich_85     
005F   3055           00436         MOVLW   D'85'
0060   022B           00437         SUBWF   gRJoyY,W
0061   1803           00438         BTFSC   STATUS,C
0062   2864           00439         GOTO    y_groesser_85   
0063                  00440 y_kleiner_gleich_85
                      00441 ;       BSF     m_display_r,6           ;LINKS OBEN
0063   0008           00442         RETURN
                      00443         
                      00444         
0064                  00445 y_groesser_85
0064   30AA           00446         MOVLW   D'170'
0065   022B           00447         SUBWF   gRJoyY,W
0066   1803           00448         BTFSC   STATUS,C
0067   286A           00449         GOTO    y_groesser_170
0068                  00450 y_kleiner_gleich_170
0068   1686           00451         BSF     LED_r_left              ;LINKS
0069   0008           00452         RETURN
                      00453         
                      00454         
006A                  00455 y_groesser_170
                      00456         ;BSF    m_display_r,0           ;LINKS UNTEN
006A   0008           00457         RETURN
                      00458 ;####################################
                      00459 ;####################################   
006B                  00460 x_groesser_85
006B   30AA           00461         MOVLW   D'170'
006C   022A           00462         SUBWF   gRJoyX,W
006D   1803           00463         BTFSC   STATUS,C
006E   287C           00464         GOTO    x_groesser_170          
MPASM  5.03          LOCHRASTER_JOYSTICKS.ASM   4-20-2007  9:03:40         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

006F                  00465 x_kleiner_gleich_170
006F   3055           00466         MOVLW   D'85'
0070   022B           00467         SUBWF   gRJoyY,W
0071   1803           00468         BTFSC   STATUS,C
0072   2875           00469         GOTO    y_2_groesser_85 
0073                  00470 y_2_kleiner_gleich_85
0073   1706           00471         BSF     LED_r_up                        ;OBEN
0074   0008           00472         RETURN
                      00473         
                      00474         
0075                  00475 y_2_groesser_85
0075   30AA           00476         MOVLW   D'170'
0076   022B           00477         SUBWF   gRJoyY,W
0077   1803           00478         BTFSC   STATUS,C
0078   287A           00479         GOTO    y_2_groesser_170
0079                  00480 y_2_kleiner_gleich_170
                      00481         ;BSF    m_display_c,0           ;MITTE
0079   0008           00482         RETURN
                      00483         
                      00484         
007A                  00485 y_2_groesser_170
007A   1606           00486         BSF     LED_r_down              ;UNTEN
007B   0008           00487         RETURN  
                      00488         
                      00489 ;####################################
                      00490 ;####################################   
007C                  00491 x_groesser_170
007C   3055           00492         MOVLW   D'85'
007D   022B           00493         SUBWF   gRJoyY,W
007E   1803           00494         BTFSC   STATUS,C
007F   2881           00495         GOTO    y_3_groesser_85 
0080                  00496 y_3_kleiner_gleich_85
                      00497         ;BSF    m_display_r,4           ;RECHTS OBEN
0080   0008           00498         RETURN
                      00499         
                      00500         
0081                  00501 y_3_groesser_85
0081   30AA           00502         MOVLW   D'170'
0082   022B           00503         SUBWF   gRJoyY,W
0083   1803           00504         BTFSC   STATUS,C
0084   2887           00505         GOTO    y_3_groesser_170
0085                  00506 y_3_kleiner_gleich_170
0085   1786           00507         BSF     LED_r_right             ;RECHTS
0086   0008           00508         RETURN
                      00509         
                      00510         
0087                  00511 y_3_groesser_170
                      00512         ;BSF    m_display_r,2           ;RECHTS UNTEN
0087   0008           00513         RETURN  
                      00514 ;###############################################################################
0088                  00515 UP_Display_l                    ;Positionsberechnung Joystick links
0088   3055           00516         MOVLW   D'85'           ;links und rechts kann auch wieder mit
0089   022C           00517         SUBWF   gLJoyX,W                ;Tabelle minimiert weden!
MPASM  5.03          LOCHRASTER_JOYSTICKS.ASM   4-20-2007  9:03:40         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

008A   1803           00518         BTFSC   STATUS,C
008B   2898           00519         GOTO    _x_groesser_85
                      00520 
008C                  00521 _x_kleiner_gleich_85    
008C   3055           00522         MOVLW   D'85'
008D   022D           00523         SUBWF   gLJoyY,W
008E   1803           00524         BTFSC   STATUS,C
008F   2891           00525         GOTO    _y_groesser_85  
0090                  00526 _y_kleiner_gleich_85
                      00527         ;BSF    m_display_l,6           ;LINKS OBEN
0090   0008           00528         RETURN
                      00529         
                      00530         
0091                  00531 _y_groesser_85
0091   30AA           00532         MOVLW   D'170'
0092   022D           00533         SUBWF   gLJoyY,W
0093   1803           00534         BTFSC   STATUS,C
0094   2897           00535         GOTO    _y_groesser_170
0095                  00536 _y_kleiner_gleich_170
0095   1486           00537         BSF     LED_l_left              ;LINKS
0096   0008           00538         RETURN
                      00539         
                      00540         
0097                  00541 _y_groesser_170
                      00542         ;BSF    m_display_l,0           ;LINKS UNTEN
0097   0008           00543         RETURN
                      00544 ;####################################
                      00545 ;####################################   
0098                  00546 _x_groesser_85
0098   30AA           00547         MOVLW   D'170'
0099   022C           00548         SUBWF   gLJoyX,W
009A   1803           00549         BTFSC   STATUS,C
009B   28A9           00550         GOTO    _x_groesser_170
009C                  00551 _x_kleiner_gleich_170
009C   3055           00552         MOVLW   D'85'
009D   022D           00553         SUBWF   gLJoyY,W
009E   1803           00554         BTFSC   STATUS,C
009F   28A2           00555         GOTO    _y_2_groesser_85        
00A0                  00556 _y_2_kleiner_gleich_85
00A0   1586           00557         BSF     LED_l_up                        ;OBEN
00A1   0008           00558         RETURN
                      00559         
                      00560         
00A2                  00561 _y_2_groesser_85
00A2   30AA           00562         MOVLW   D'170'
00A3   022D           00563         SUBWF   gLJoyY,W
00A4   1803           00564         BTFSC   STATUS,C
00A5   28A7           00565         GOTO    _y_2_groesser_170
00A6                  00566 _y_2_kleiner_gleich_170
                      00567         ;BSF    m_display_c,1           ;MITTE
00A6   0008           00568         RETURN
                      00569         
                      00570         
MPASM  5.03          LOCHRASTER_JOYSTICKS.ASM   4-20-2007  9:03:40         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00A7                  00571 _y_2_groesser_170
00A7   1406           00572         BSF     LED_l_down              ;UNTEN
00A8   0008           00573         RETURN  
                      00574         
                      00575 ;####################################
                      00576 ;####################################   
00A9                  00577 _x_groesser_170
00A9   3055           00578         MOVLW   D'85'
00AA   022D           00579         SUBWF   gLJoyY,W
00AB   1803           00580         BTFSC   STATUS,C
00AC   28AE           00581         GOTO    _y_3_groesser_85        
00AD                  00582 _y_3_kleiner_gleich_85
                      00583         ;BSF    m_display_l,4           ;RECHTS OBEN
00AD   0008           00584         RETURN
                      00585         
                      00586         
00AE                  00587 _y_3_groesser_85
00AE   30AA           00588         MOVLW   D'170'
00AF   022D           00589         SUBWF   gLJoyY,W
00B0   1803           00590         BTFSC   STATUS,C
00B1   28B4           00591         GOTO    _y_3_groesser_170
00B2                  00592 _y_3_kleiner_gleich_170
00B2   1506           00593         BSF     LED_l_right             ;RECHTS
00B3   0008           00594         RETURN
                      00595         
                      00596         
00B4                  00597 _y_3_groesser_170
                      00598         ;BSF    m_display_l,2           ;RECHTS UNTEN
00B4   0008           00599         RETURN
                      00600 ;###############################################################################
                      00601 ;###########################      Warteschleifen     ###########################
                      00602 ;###############################################################################
                      00603 
                      00604 ;############################***********************############################
                      00605 ;##########################  ATTENTION Warteschleife  ##########################
                      00606 ;UP_wait_20us
                      00607 ;                       ;100 cycles
                      00608 ;       movlw   0x21
                      00609 ;       movwf   wait_20us
                      00610 ;loop20us_0
                      00611 ;       decfsz  wait_20us, f
                      00612 ;       goto    loop20us_0
                      00613 ;RETURN
                      00614 ;##########################  ATTENTION Warteschleife 2 #########################
00B5                  00615 UP_wait_50us
                      00616                         ;250 cycles
00B5   3053           00617         movlw   0x53
00B6   00B0           00618         movwf   wait_50us
00B7                  00619 loop50us_0
00B7   0BB0           00620         decfsz  wait_50us, f
00B8   28B7           00621         goto    loop50us_0
Warning[203]: Found opcode in column 1. (RETURN)
00B9   0008           00622 RETURN
MPASM  5.03          LOCHRASTER_JOYSTICKS.ASM   4-20-2007  9:03:40         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00623 ;########################**********************************#####################
                      00624 ;###################### CLOCK LOW - CLOCK HIGH Warteschleife ###################
                      00625 ;UP_wait_5us            ;UP_wait_5us
                      00626 ;                       ;25 cycles
                      00627 ;       movlw   0x08
                      00628 ;       movwf   wait_5us
                      00629 ;loop5us_0
                      00630 ;       decfsz  wait_5us, f
                      00631 ;       goto    loop5us_0
                      00632 ;RETURN
                      00633 ;##################### CLOCK LOW - CLOCK HIGH Warteschleife 2 ##################
00BA                  00634 UP_wait_25us            ;UP_wait_5us
                      00635                         ;124 cycles
00BA   3029           00636         movlw   0x29
00BB   00B1           00637         movwf   wait_25us
00BC                  00638 loop25us_0
00BC   0BB1           00639         decfsz  wait_25us, f
00BD   28BC           00640         goto    loop25us_0
                      00641 
                      00642                         ;1 cycle
00BE   0000           00643         nop
Warning[203]: Found opcode in column 1. (RETURN)
00BF   0008           00644 RETURN
                      00645 ;############################***********************############################
                      00646 ;########################### DEBUGGING Warteschleife ###########################
00C0                  00647 UP_wait_05s
                      00648                         ;2499999 cycles
00C0   3016           00649         movlw   0x16
00C1   00B3           00650         movwf   wait_05s
00C2   3074           00651         movlw   0x74
00C3   00B4           00652         movwf   wait_05s_1
00C4   3006           00653         movlw   0x06
00C5   00B5           00654         movwf   wait_05s_2
00C6                  00655 loop05s_0
00C6   0BB3           00656         decfsz  wait_05s, f
00C7   28C9           00657         goto    $+2
00C8   0BB4           00658         decfsz  wait_05s_1, f
00C9   28CB           00659         goto    $+2
00CA   0BB5           00660         decfsz  wait_05s_2, f
00CB   28C6           00661         goto    loop05s_0
                      00662 
                      00663                         ;1 cycle
00CC   0000           00664         nop
Warning[203]: Found opcode in column 1. (RETURN)
00CD   0008           00665 RETURN
                      00666 ;###############################################################################
                      00667 ;###########################        Tabellen        ############################
                      00668 ;###############################################################################
                      00669 
                      00670 ;############################***********************############################
                      00671 ;###########################       PSC-Tabelle       ###########################
                      00672 
00CE                  00673 tab_PSC                         ;Tabellenlänge: 18; -> zaehler_tab max. 18!
MPASM  5.03          LOCHRASTER_JOYSTICKS.ASM   4-20-2007  9:03:40         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00CE   140A           00674         BSF     PCLATH,0                ;PCLATH auf ...
00CF   148A           00675         BSF     PCLATH,1                ;... 0x3 stellen
00D0   0082           00676         MOVWF   PCL             ;PCL ist jetzt 0x300 + zaehler_tab
                      00677         
                      00678         
                      00679         
Warning[205]: Found directive in column 1. (ORG)
0300                  00680 ORG     0x300                   ; Tabelle in Speicherblock 3
                      00681         
0300   3422           00682         RETLW   sSTART          ; Playstation Controller - Startbefehl
0301   3423           00683         RETLW   gSTART          ; empfange... irgentwas
                      00684 
0302   3424           00685         RETLW   sTYPE           ; Playstation Controller - Typebefehl
0303   3425           00686         RETLW   gTYPE           ; empfange Type des Controllers
                      00687 
0304   3421           00688         RETLW   sIDLE           ; übertrage 0 Signal
0305   3426           00689         RETLW   gSTATUS         ; empfange Status des Controllers 
                      00690 
0306   3421           00691         RETLW   sIDLE           ; übertrage 0 Signal
0307   3428           00692         RETLW   gLEFT           ; empfange Status der Tasten LINKS
                      00693 
0308   3421           00694         RETLW   sIDLE           ; übertrage 0 Signal
0309   3429           00695         RETLW   gRIGHT          ; empfange Status der Tasten RECHTS
                      00696 
030A   3421           00697         RETLW   sIDLE           ; übertrage 0 Signal
030B   342A           00698         RETLW   gRJoyX          ; empfange : Joystick rechts, x-Achse
                      00699 
030C   3421           00700         RETLW   sIDLE           ; übertrage 0 Signal
030D   342B           00701         RETLW   gRJoyY          ; empfange : Joystick rechts, y-Achse
                      00702 
030E   3421           00703         RETLW   sIDLE           ; übertrage 0 Signal
030F   342C           00704         RETLW   gLJoyX          ; empfange : Joystick links, x-Achse
                      00705 
0310   3421           00706         RETLW   sIDLE           ; übertrage 0 Signal
0311   342D           00707         RETLW   gLJoyY          ; empfange : Joystick links, y-Achse
                      00708 
                      00709 
Warning[205]: Found directive in column 1. (END)
                      00710 END
MPASM  5.03          LOCHRASTER_JOYSTICKS.ASM   4-20-2007  9:03:40         PAGE 15


SYMBOL TABLE
  LABEL                             VALUE 

C                                 00000000
DC                                00000001
EEADR                             00000009
EECON1                            00000088
EECON2                            00000089
EEDATA                            00000008
EEIE                              00000006
EEIF                              00000004
F                                 00000001
FSR                               00000004
GIE                               00000007
INDF                              00000000
INDF_0_write_0                    0000004B
INDF_0_write_1                    00000049
INDF_1_write_0                    00000059
INDF_1_write_1                    00000057
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
LED_l_down                        PORTB, 0
LED_l_left                        PORTB, 1
LED_l_right                       PORTB, 2
LED_l_up                          PORTB, 3
LED_r_down                        PORTB, 4
LED_r_left                        PORTB, 5
LED_r_right                       PORTB, 7
LED_r_up                          PORTB, 6
NOT_PD                            00000003
NOT_RBPU                          00000007
NOT_TO                            00000004
OPTION_REG                        00000081
PCL                               00000002
PCLATH                            0000000A
PORTA                             00000005
PORTB                             00000006
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSC_1                             00000031
PSC_2                             00000035
PSC_sende_0                       0000003F
PSC_sende_0_next                  00000045
PSC_sende_1                       0000004D
PSC_sende_1_next                  00000053
PSC_st1                           00000025
RBIE                              00000003
RBIF                              00000000
RD                                00000000
RP0                               00000005
RP1                               00000006
MPASM  5.03          LOCHRASTER_JOYSTICKS.ASM   4-20-2007  9:03:40         PAGE 16


SYMBOL TABLE
  LABEL                             VALUE 

STATUS                            00000003
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
TMR0                              00000001
TRISA                             00000085
TRISB                             00000086
UP_Display_l                      00000088
UP_Display_r                      0000005B
UP_PSC_send_tabelle               00000023
UP_wait_05s                       000000C0
UP_wait_25us                      000000BA
UP_wait_50us                      000000B5
W                                 00000000
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_CP_OFF                           00003FFF
_CP_ON                            0000000F
_HS_OSC                           00003FFE
_LP_OSC                           00003FFC
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F84A                          00000001
_x_groesser_170                   000000A9
_x_groesser_85                    00000098
_x_kleiner_gleich_170             0000009C
_x_kleiner_gleich_85              0000008C
_y_2_groesser_170                 000000A7
_y_2_groesser_85                  000000A2
_y_2_kleiner_gleich_170           000000A6
_y_2_kleiner_gleich_85            000000A0
_y_3_groesser_170                 000000B4
_y_3_groesser_85                  000000AE
_y_3_kleiner_gleich_170           000000B2
_y_3_kleiner_gleich_85            000000AD
_y_groesser_170                   00000097
_y_groesser_85                    00000091
_y_kleiner_gleich_170             00000095
_y_kleiner_gleich_85              00000090
a_ATT                             PORTA, 3
a_CLOCK                           PORTA, 2
a_COMMAND                         PORTA, 1
bank1                             STATUS, RP0
e_DATA                            PORTA, 0
gLEFT                             00000028
gLJoyX                            0000002C
MPASM  5.03          LOCHRASTER_JOYSTICKS.ASM   4-20-2007  9:03:40         PAGE 17


SYMBOL TABLE
  LABEL                             VALUE 

gLJoyY                            0000002D
gRIGHT                            00000029
gRJoyX                            0000002A
gRJoyY                            0000002B
gSTART                            00000023
gSTATUS                           00000026
gTYPE                             00000025
init                              00000001
loop05s_0                         000000C6
loop25us_0                        000000BC
loop50us_0                        000000B7
main                              00000010
nicht_bereit                      00000021
rSTATUS                           00000027
sIDLE                             00000021
sPSC                              00000020
sSTART                            00000022
sTYPE                             00000024
tab_PSC                           000000CE
wait_05s                          00000033
wait_05s_1                        00000034
wait_05s_2                        00000035
wait_25us                         00000031
wait_50us                         00000030
x_groesser_170                    0000007C
x_groesser_85                     0000006B
x_kleiner_gleich_170              0000006F
x_kleiner_gleich_85               0000005F
y_2_groesser_170                  0000007A
y_2_groesser_85                   00000075
y_2_kleiner_gleich_170            00000079
y_2_kleiner_gleich_85             00000073
y_3_groesser_170                  00000087
y_3_groesser_85                   00000081
y_3_kleiner_gleich_170            00000085
y_3_kleiner_gleich_85             00000080
y_groesser_170                    0000006A
y_groesser_85                     00000064
y_kleiner_gleich_170              00000068
y_kleiner_gleich_85               00000063
zaehler                           00000032
zaehler_bit                       0000002F
zaehler_tab                       0000002E
MPASM  5.03          LOCHRASTER_JOYSTICKS.ASM   4-20-2007  9:03:40         PAGE 18


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)


0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX X--------------- ---------------- ----------------
0300 : XXXXXXXXXXXXXXXX XX-------------- ---------------- ----------------
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:   227
Program Memory Words Free:   797


Errors   :     0
Warnings :     6 reported,     0 suppressed
Messages :     9 reported,     0 suppressed

